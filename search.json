[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Descrição e Visualização de Dados",
    "section": "",
    "text": "Nota\n\n\n\nFormatação e apresentação de tabelas\nAo apresentar data.frames como resultados das análises de dados, utilizaremos o pacote flextable para fins de apresentação gráfica. Caso deseje rodar os códigos no RStudio, remova as funções flextable() e outras funções associadas (ex.: fit_to_width(max_width = 8))."
  },
  {
    "objectID": "qmd/01_estrutura_dados/01-estrdados.html",
    "href": "qmd/01_estrutura_dados/01-estrdados.html",
    "title": "1  Estrutura e tipo de dados",
    "section": "",
    "text": "Pacotes e funções utilizadas no capítulo\n\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(flextable)\nUtilizamos métodos de estatística descritiva para evidenciar informações relevantes de um conjunto de dados. Em grande parte, a apresentação destas informações passa pela construção de tabelas, gráficos e pelo cálculo de descritores que resumem algumas características das variáveis envolvidas (ex. média aritmética, desvio padrão, frequência relativa, padrões de associação). Neste capítulo iremos tratar a estrutura de um conjunto de dados e dos tipos de variáveis mais comuns."
  },
  {
    "objectID": "qmd/01_estrutura_dados/01-estrdados.html#um-exemplo",
    "href": "qmd/01_estrutura_dados/01-estrdados.html#um-exemplo",
    "title": "1  Estrutura e tipo de dados",
    "section": "1.1 Um exemplo",
    "text": "1.1 Um exemplo\nConsidere a tabela abaixo, construída a partir do livro de Biocenoses em Reservatórios: padrões espaciais e temporais (Rodrigues et al. 2005).\n\nres = read_delim(\"datasets/Reservatorios_Parana_parcial.csv\", \n                  locale = locale(encoding = \"latin1\"))\n\n\nres %>%\n  flextable() %>% \n  fit_to_width(max_width = 8)\n\n\n\nTabela 1.1:  Variáveis ambientais e captura de peixes em reserrvatórios da bacia do rio Paraná. \nReservatorioBaciaFechamentoAreaTrofiapHCondutividadeAlcalinidadeP.totalRiquezaCPUECavernosoIguacu1,9652.90Oligotrófico7.433.1139.807.8189.22CurucacaIguacu1,9822.00Oligotrófico7.032.4125.704.71628.73Foz do AreiaIguacu1,980139.00Oligotrófico7.335.597.0014.31911.59IraiIguacu2,00015.00Eutrófico6.950.23.3053.41230.76JMFIguacu1,9700.45Mesotrófico7.340.23.7041.2185.95JordaoIguacu1,9963.40Oligotrófico7.123.7152.703.3177.75PassaunaIguacu1,97814.00Oligotrófico8.8125.6526.0015.2117.51PiraquaraIguacu1,9793.30Oligotrófico7.122.850.674.584.01Salto CaxiasIguacu1,998124.00Oligotrófico7.339.6106.0012.12120.83Salto do VauIguacu1,9592.90Oligotrófico6.523.2279.0011.082.43Salto OsorioIguacu1,97551.00Oligotrófico8.638.9233.303.42412.55Salto SantiagoIguacu1,979208.00Oligotrófico9.239.5117.6013.12111.73SegredoIguacu1,99282.50Oligotrófico7.034.5165.206.42213.72MouraoIvai1,96411.30Oligotrófico8.123.356.557.11516.50PatosIvai1.30Mesotrófico6.946.0180.1039.2104.71GuaricanaLitoranea1,9577.00Oligotrófico7.427.983.7212.4127.95Parigot SouzaLitoranea1,97012.00Oligotrófico7.763.6259.2016.91213.12Salto do MeioLitoranea0.10Oligotrófico6.937.4147.1017.11116.10VossorocaLitoranea1,9495.10Mesotrófico7.339.8156.0021.91411.74Canoas IParanapanema1,99930.85Oligotrófico7.463.3234.909.93517.95Canoas IIParanapanema1,99222.50Oligotrófico7.861.29.04013.86CapivaraParanapanema1,975419.30Oligotrófico7.558.6196.005.53413.04ChavantesParanapanema1,970400.00Oligotrófico7.657.8211.807.8237.35RosanaParanapanema1,986220.007.758.2202.403020.92Salto GrandeParanapanema1,95812.00Oligotrófico7.162.3230.1010.32413.67TaquarucuParanapanema1,98980.10Oligotrófico7.957.0191.804.53321.82MelissaPiriqui1,9620.10Eutrófico6.834.068.3766.9126.29Santa MariaPiriqui0.07Oligotrófico6.841.7480.1014.979.40AlagadosTibagi1,9097.20Oligotrófico7.641.7172.2019.975.60ApucaraninhaTibagi1,958102.05HarmoniaTibagiOligotrófico8.331.0113.308.6724.88\n\n\n\n\n\n\nA tabela Tabela 1.1 é formada por 31 linhas referentes a reservatórios do estado do Paraná e 11 colunas em que constam informações sobre cada reservatório, sendo elas:\nReservatorio: nome do reservatório;\nBacia: bacia hidrográfica (Iguacu, Ivai, Litoranea, Paranapanema, Piriqui, Tibagi);\nFechamento: ano de formação do reservatório;\nArea: área em \\(km^2\\);\nTrofia: grau de trofia (Eutrófico, Mesotrófico, Oligotrófico);\npH: pH;\nCondutividade: condutividade;\nAlcalinidade: alcalinidade;\nP.total: fósforo total;\nRiqueza: número de espécies de peixes encontradas;\nCPUE: captura (kg) por unidade de esforço;"
  },
  {
    "objectID": "qmd/01_estrutura_dados/01-estrdados.html#unidades-amostrais-e-descritores",
    "href": "qmd/01_estrutura_dados/01-estrdados.html#unidades-amostrais-e-descritores",
    "title": "1  Estrutura e tipo de dados",
    "section": "1.2 Unidades amostrais e descritores",
    "text": "1.2 Unidades amostrais e descritores\nEsta tabela está organizada no formato em que cada linha representa uma unidade amostral (UA) e cada coluna representa uma variável (VA) que descreve determinada característica desta observação. Ao longo dos próximos capítulos veremos diversos conjuntos de dados organizados neste formato.\n\n\n\n\nTabela 1.2:  Estrutura de uma base de dados em que as colunas representam as variáveis (ou atributos) e as linhas representam as unidades amostrais (ou observações) \nIDVA 1VA 2VA 3VA 4VA 5VA 6VA 7UA 1  UA 2  UA 3  UA 4  UA 5  UA 6  UA 7  UA 8  UA 9  UA 10  \n\n\n\n\n\n\nNo exemplo apresentado na Tabela 1.1 segue a esrutura descrita acima (Tabela 1.2), em que cada unidade amostral (linhas da tabela) é um reservatório descrito por variáveis (ou atributos) dispostas nas colunas da tabela. O reservatório de Cavernoso por exemplo faz parte da bacia do Iguacu, foi formado no ano de 1965, tem área de 2.9 \\(km^2\\), pH igual a 7.4 e assim por diante.\n\n\n\n\n\n\nValores faltantes\n\n\n\nAlgumas células da tabela estão preenchidas por NA. Isto significa que a informação naquela célula não foi mensurada e que temos um dado faltante. Você deve ter muito cuidado ao lidar com este tipo de situação. Se uma linha contém muitas células sem informação, é prudente excluir esta observação das análises. Se por outro lado, uma coluna apresenta muitos valores faltantes, talvez seja prudente excluir a variável das análises. Se você não deseja ou não pode excluir a linha ou a coluna existem métodos de preenchimento de dados faltantes. No entanto, ao optar por algum destes métodos, você deve ter ter claro quais serão os efeitos de inserir uma informação à tabela de dados que efetivamente não foi mensurada."
  },
  {
    "objectID": "qmd/01_estrutura_dados/01-estrdados.html#tipos-de-dados",
    "href": "qmd/01_estrutura_dados/01-estrdados.html#tipos-de-dados",
    "title": "1  Estrutura e tipo de dados",
    "section": "1.3 Tipos de dados",
    "text": "1.3 Tipos de dados\nUma tabela de dados pode ser composta por variáveis quantitativas ou qualitativas.\n\nVariáveis qualitativas\nSão variáveis não-numéricas como categorias ou rótulos. Dentre as variáveis qualitativas temos aquelas do tipo categóricas não-ordenadas e do tipo categóricas ordenadas.\nVariável categórica não-ordenada: a variável Bacia classifica um reservatório como pertencente a uma determinada bacia hidrográfica. Os níveis da variável Bacia são: Iguacu, Ivai, Litoranea, Paranapanema, Piriqui, Tibagi. A variável é do tipo categórica não-ordenada, pois os níveis não possuem qualquer relação de ordenação natural entre si.\n\n\nVariáveis quantitativas\nSão variáveis numéricas que também podem ser sub-divididas em dois grupos: discretas e contínuas.\n\nVariáveis quantitativas discretas: envolvem quantias enumeráveis como a contagem de barcos que saem para pescar em um determinado dia, o número de peixes de um cardume. Em nosso exemplo, a variável Riqueza é quantitativa discreta pois expressa o número de espécies de peixes encontradas em cada reservatório. Este é um número inteiro que pode assumir valor mínimo igual a 0 (nenhuma espécie) e em teoria, não tem limite superior (ainda que neste exemplo, o número máximo encontrados seja de 40 espécies).\nVariáveis quantitativas contínuas: envolvem quantias não-enumeráveis como a vazão em \\(m^3/seg\\) que verte de uma cachoeira, o volume de chuva em um determinado dia, altura da maré ou a velocidade do vento. O limite de precisão que utilizamos para representá-las depende basicamente da capacidade de mensuração dos aparelhos disponíveis. Em nosso exemplo, temos diversas variáveis deste tipo como pH, Condutividade, Fosforo_total.\n\n\n\n\n\n\n\nTransformando variáveis\n\n\n\nSempre é possível transformar variáveis quantitativas em qualitativas. Se temos uma variável medindo o comprimento de peixes desembarcados em centímetros (variável quantitativa), é possível expressá-la de forma categórica em peixes grandes e peixes pequenos (variável qualitativa). Por outro lado, se tivermos somente a informação de que um peixe é grande ou pequeno, não podemos recuperar as quantias numéricas originais. Ao transformar uma variável de quantitativa em qualitativa, algumas propriedades são perdidas."
  },
  {
    "objectID": "qmd/01_estrutura_dados/01-estrdados.html#níveis-de-mensuração",
    "href": "qmd/01_estrutura_dados/01-estrdados.html#níveis-de-mensuração",
    "title": "1  Estrutura e tipo de dados",
    "section": "1.4 Níveis de mensuração",
    "text": "1.4 Níveis de mensuração\nPodemos organizar uma variável a partir de seu nível de mensuração (Figura 1.1), dado em: nominal, ordinal, intervalar e razão.\nNível nominal: é característico de variáveis que possuem níveis não ordenaveis. Ex. cor, grupo taxonômico, nomes de cidades, etc.\n\nNível ordinal: é aquele em que os níveis podem ser ordenados, embora não seja possível quantificar as diferenças entre dois níveis. Ex. i - Ordem de chegada de maratonistas em uma competição (\\(1^o\\),\\(2^o\\),\\(3^o\\),\\(\\cdots\\)). ii - Condição de saneamento das cidades (ótimo, bom, ruim, péssimo). iii - Condição de saneamento das praias da baixada santista (próprio, imprórpio). No nível ordinal podemos ordenar os elementos porém não podemos quantificar as diferenças entre eles.\nNível intervalar: é aquele em que além ser possível ordenar, é possível quantificar as diferenças entre duas observações. No entanto, não há um ponto inicial natural, ou seja, um ponto zero que indique ausência da quantia. Ex. i – Temperatura: \\(0^oC\\) não indica ausência de temperatura, assim como \\(10^oC\\) não é duas vezes mais quente que \\(5^oC\\). Essas características são somente uma convenção relacionada à escala de mensuração da temperatura. ii - Ano do calendário: o ano zero é uma convenção do calendário, não significa ausência de tempo.\nNível de razão: é como o intervalar, porém existe um ponto zero natural. Peso igual a \\(0\\) kg indica ausência de peso e dez quilogramas é duas vezes mais pesado que \\(5\\) kg. O mesmo vale para comprimento, distância, velocidade, número de ovos.\n\n\n\n\n\nFigura 1.1: Tipos de variáveis e níveis de mensuração.\n\n\n\nA depender do nível de mensuração, algumas operações matemáticas podem ou não fazer sentido. Por exemplo, se uma espécie tem \\(N_A = 100\\) indivíduos na região A e \\(N_B = 200\\) na região B, a segunda região é duas vezes mais populosa pois \\(\\frac{N_B}{N_A} = 2\\). Por outro lado, se a temperatura na região A é de \\(T_A = 10^oC\\) enquanto na B é de \\(T_B = 20^oC\\) não faz sentido fazer \\(\\frac{T_B}{T_A} = 2\\) e dizer que B seja duas vezes mais quente que A. Ainda que matematicamente a operação seja possível nos dois exemplos, no último sua interpretação física não tem sentido.\n\n\n\n\n\n\nTipos de dados vs níveis de mensuração\n\n\n\nExiste uma relação entre tipo de dados e nível de mensuração. Os níveis nominal e ordinal de mensuração se referem a variáveis qualitativas não-ordenadas e qualitativas ordenadas respectivamente. Já os níveis intervalar e razão se referem a variáveis quantitativas, podendo ser discretas ou contínuas.\n\n\n\n\n\n\nRodrigues, Liliana, Sidinei Magela Thomaz, Angelo Antonio Agostinho, and Luiz Carlos Gomes. 2005. Biocenoses Em Reservatórios: Padrões Espaciais e Temporais. Rima."
  },
  {
    "objectID": "qmd/01_estrutura_dados/02-procdados.html",
    "href": "qmd/01_estrutura_dados/02-procdados.html",
    "title": "2  Processamento de dados",
    "section": "",
    "text": "Pacotes e funções utilizadas no capítulo\n\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(flextable)\nTabelas de dados como a apresentada no Capítulo 1 são normalmente armazenadas em planilhas eletrônicas. Os formatos mais comuns para armazenamento são arquivos do tipo .xlsx, .csv, .txt ou planilhas na nuvem (ex. google sheets). Os programas para visualização e destes tipos de arquivos são apropriados para inserção e armazenamendo de dados, mas apresentam limitações para o processamento, descrição e visualização.\nNeste capítulo iremos utilizar a linguagem estatística R e o ambiente de trabalho RStudio para iniciar um projeto de descrição e visualização de dados. Veremos como preparar um novo projeto na linguagem R, organizar as bases de dados em um diretório de trabalho, importá-las para o ambiente R e aplicar algumas ações comuns de processamento. O objetivo é que a base de dados original permaneça inalterada no diretório de trabalho e que todo o processamento seja feito em uma versão da base de dados que será importada para o ambiente R. Isto evita que sejam feitas alterações equivocadas diretamente na base de dados, resultando na perda da informação original."
  },
  {
    "objectID": "qmd/01_estrutura_dados/02-procdados.html#iniciando-o-projeto-intro_estatistica",
    "href": "qmd/01_estrutura_dados/02-procdados.html#iniciando-o-projeto-intro_estatistica",
    "title": "2  Processamento de dados",
    "section": "2.1 Iniciando o projeto Intro_estatistica",
    "text": "2.1 Iniciando o projeto Intro_estatistica\nInicialmente, vamos criar um diretório de trabalho, um local em nosso computador onde iremos colocar todos os arquivos necessários ao projeto (ex. as tabelas de dados), bem como os arquivos gerados durante o projeto (planilhas, gráficos, figuras, slides, arquivos .pdf, etc.).\n\nNa pasta Documentos crie um diretório denominado Intro_estatistica.\nApós criar o diretório copie para dentro dele a base de dados Reservatorios_Parana_parcial.csv. A base está disponível no link do GitHub. Após acessar o link, a janela de seu navegador irá mostrar um arquivo texto com os dados da planilha. Estes são os mesmos dados que apresentamos no Capítulo 1.\nAbra o R studio e em seguida crie um novo Script em: File --> New File --> RScript. Antes de qualquer ação, salve o novo arquivo como: aula_01.R. A partir de agora, todos os comandos desta aula deverão ser digitados dentro deste arquivo. Para rodar cada comando, pressione o botão Run no RStudio ou digite as teclas de atalho Ctrl + Enter. Não se esqueça de salvar o arquivo texto à medida que adiciona novos comandos.\nVamos dizer ao R onde procurar os arquivos relacionados a este projeto. Na primeira linha de seu arquivo novo digite o comando abaixo e depois pressione Run:\n\n\n# Definindo a localização do projeto em seu computador\nsetwd(\"C:/Users/Meu_usuario/Documents/Intro_estatistica\")\n\n\n\n\n\n\n\nIdentificando o diretório de trabalho\n\n\n\nO comando setwd() irá dizer ao R a partir de que diretório você está trabalhando. Isto é, de onde estão sendo lidos os arquivos e onde serão salvos os resultados do projeto.\nSe você utiliza o ambiente Windows, note que o R identifica o caminho ao diretório por uma barra invertida (/) para separação dos pastas que deve ser uitilizada.\n\n\n\nVerifique se o comando foi bem sucedido digitando:\n\n\ngetwd()\n\n\n\n\nComo resultado, você deverá obter uma saída similar à apresentada acima, contendo o caminho do projeto em seu computador.\n\nFinalmente, para verificar se o R está lendo corretamente os arquivos em seu diretório, digite o comando dir() no console do RStudio:\n\n\ndir()\n\n\n\n\nSe tudo estiver correto, o resultado deste comando deve listar os dois arquivos presentes em sua pasta de trabalho recém criada: Intro_estatistica.Rproj e Reservatorios_Parana_parcial.csv."
  },
  {
    "objectID": "qmd/01_estrutura_dados/02-procdados.html#instalação-de-pacotes",
    "href": "qmd/01_estrutura_dados/02-procdados.html#instalação-de-pacotes",
    "title": "2  Processamento de dados",
    "section": "2.2 Instalação de pacotes",
    "text": "2.2 Instalação de pacotes\nO R possui vários pacotes (ou bibliotecas) pré-instalados, porém é comum que tenhamos que utilizar alguns que não venham na instalação padrão. Neste projeto utilizaremos o pacote tidyverse. Para instalar o pacote, digite o seguinte comando no Console do RStudio:\n\ninstall.packages(\"tidyverse\")\n\nPara mais detalhes sobre o pacote, acesse a apostila do R e veja o site oficial.\nUm pacote necessita ser instalado somente uma vez em seu computador. Feito isto ele estará sempre disponível, bastando carregá-lo a cada vez que você abrir uma seção do R."
  },
  {
    "objectID": "qmd/01_estrutura_dados/02-procdados.html#carregando-os-pacotes",
    "href": "qmd/01_estrutura_dados/02-procdados.html#carregando-os-pacotes",
    "title": "2  Processamento de dados",
    "section": "2.3 Carregando os pacotes",
    "text": "2.3 Carregando os pacotes\nAntes de iniciar as análises, insira este comando em seu arquivo texto:\n\nlibrary(tidyverse)\n\nAo rodar este comando você habilita as funções do pacote para serem utilizados em sua seção do R. Sempre que você iniciar uma nova seção do R você deverá carregar os pacotes necessários com o comando library()."
  },
  {
    "objectID": "qmd/01_estrutura_dados/02-procdados.html#importanto-a-base-de-dados",
    "href": "qmd/01_estrutura_dados/02-procdados.html#importanto-a-base-de-dados",
    "title": "2  Processamento de dados",
    "section": "2.4 Importanto a base de dados",
    "text": "2.4 Importanto a base de dados\nA base de dados está disponível em nosso diretório, porém ainda não a importamos para o ambiente R. Para isto, utilize o comando read_delim():\n\n\n\n\nres = read_delim('Reservatorios_Parana_parcial.csv',\n                  delim = ',',\n                  locale = locale(decimal_mark = '.',\n                                  encoding = 'latin1'))\n\nO comando acima importa para o R os dados da tabela denominada Reservatorios_Parana_parcial.csv e cria um objeto denominado res contendo as informações dos arquivo. A partir de agora, qualquer modificação que fizermos no objeto res, não irá alterar o arquivo .csv original.\nVamos entender alguns argumentos do comando read_delim():\n\ndelim = ',': utilizado para dizer ao R que cada coluna na base de dados está separada das demais por uma vírgula. Se no arquivo .csv as colunas estivessem separadas por ponto-e-vígula, deveríamos escrever delim = ';'.\ndecimal_mark = '.': informa que o símbolo ponto é utilizado como um separador decimal. Se no arquivo .csv os números decimais utilizassem a vírgula, o argumento deveria ser decimal_mark = ','.\nencoding = 'latin1': indica a forma de codificação. A necessidade deste argumento depende do sistema operacional de seu computador. Outras formas de codificação além de são UTF-8, ISO-8859-1,além de outras. Geralmente, o argumento é necessário quando existem caracteres especiais na base de dados como acentos e cedilhas. Como recomendação, é interessante evitar o uso destes tipos de caracteres sempre que possível.\n\nPodemos visualizar a base de dados no RStudio digitando:\n\nres\n\n# A tibble: 31 × 11\n   Reservato…¹ Bacia Fecha…²   Area Trofia    pH Condu…³ Alcal…⁴ P.total Riqueza\n   <chr>       <chr>   <dbl>  <dbl> <chr>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 Cavernoso   Igua…    1965   2.9  Oligo…   7.4    33.1   140.      7.8      18\n 2 Curucaca    Igua…    1982   2    Oligo…   7      32.4   126.      4.7      16\n 3 Foz do Are… Igua…    1980 139    Oligo…   7.3    35.5    97      14.3      19\n 4 Irai        Igua…    2000  15    Eutró…   6.9    50.2     3.3    53.4      12\n 5 JMF         Igua…    1970   0.45 Mesot…   7.3    40.2     3.7    41.2      18\n 6 Jordao      Igua…    1996   3.4  Oligo…   7.1    23.7   153.      3.3      17\n 7 Passauna    Igua…    1978  14    Oligo…   8.8   126.    526      15.2      11\n 8 Piraquara   Igua…    1979   3.3  Oligo…   7.1    22.8    50.7     4.5       8\n 9 Salto Caxi… Igua…    1998 124    Oligo…   7.3    39.6   106      12.1      21\n10 Salto do V… Igua…    1959   2.9  Oligo…   6.5    23.2   279      11         8\n# … with 21 more rows, 1 more variable: CPUE <dbl>, and abbreviated variable\n#   names ¹​Reservatorio, ²​Fechamento, ³​Condutividade, ⁴​Alcalinidade\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\n\nFazendo isso você verá somente parte da base de dados no console, a depender do tamanho de sua janela do RStudio. Caso queira ver a tabela completa em uma aba separada do RStudio digite:\n\nView(res)"
  },
  {
    "objectID": "qmd/01_estrutura_dados/02-procdados.html#verificando-a-estrutura-da-base-de-dados",
    "href": "qmd/01_estrutura_dados/02-procdados.html#verificando-a-estrutura-da-base-de-dados",
    "title": "2  Processamento de dados",
    "section": "2.5 Verificando a estrutura da base de dados",
    "text": "2.5 Verificando a estrutura da base de dados\nA base de dados é simplesmente uma tabela, em que cada linha representa uma observação e cada coluna uma variável a semelhança do que discutímos no Capítulo 1. Vamos realizar algumas operações para entender como explorar as informações contidas na tabela.\nO comando abaixo informa alguns detalhes sobre cada coluna da tabela e dos tipos de dados:\n\nglimpse(res)\n\nRows: 31\nColumns: 11\n$ Reservatorio  <chr> \"Cavernoso\", \"Curucaca\", \"Foz do Areia\", \"Irai\", \"JMF\", …\n$ Bacia         <chr> \"Iguacu\", \"Iguacu\", \"Iguacu\", \"Iguacu\", \"Iguacu\", \"Iguac…\n$ Fechamento    <dbl> 1965, 1982, 1980, 2000, 1970, 1996, 1978, 1979, 1998, 19…\n$ Area          <dbl> 2.90, 2.00, 139.00, 15.00, 0.45, 3.40, 14.00, 3.30, 124.…\n$ Trofia        <chr> \"Oligotrófico\", \"Oligotrófico\", \"Oligotrófico\", \"Eutrófi…\n$ pH            <dbl> 7.4, 7.0, 7.3, 6.9, 7.3, 7.1, 8.8, 7.1, 7.3, 6.5, 8.6, 9…\n$ Condutividade <dbl> 33.1, 32.4, 35.5, 50.2, 40.2, 23.7, 125.6, 22.8, 39.6, 2…\n$ Alcalinidade  <dbl> 139.80, 125.70, 97.00, 3.30, 3.70, 152.70, 526.00, 50.67…\n$ P.total       <dbl> 7.8, 4.7, 14.3, 53.4, 41.2, 3.3, 15.2, 4.5, 12.1, 11.0, …\n$ Riqueza       <dbl> 18, 16, 19, 12, 18, 17, 11, 8, 21, 8, 24, 21, 22, 15, 10…\n$ CPUE          <dbl> 9.22, 28.73, 11.59, 30.76, 5.95, 7.75, 7.51, 4.01, 20.83…\n\n\nExistem dois tipos de dados: chr identificando que a coluna contém uma variável qualitativa e dbl, identificando que a coluna contém uma variável quantitativa."
  },
  {
    "objectID": "qmd/01_estrutura_dados/02-procdados.html#reordenando-as-linhas-da-base-de-dados",
    "href": "qmd/01_estrutura_dados/02-procdados.html#reordenando-as-linhas-da-base-de-dados",
    "title": "2  Processamento de dados",
    "section": "2.6 Reordenando as linhas da base de dados",
    "text": "2.6 Reordenando as linhas da base de dados\nA tabela contém uma coluna denominada Fechamento, que mostra o ano em que o reservatório foi formado. Vamos visualizar em ordem crescente do ano de formação, do mais antigo para o mais novo:\n\nres %>% \n  arrange(Fechamento)\n\n# A tibble: 31 × 11\n   Reservatorio Bacia Fecha…¹  Area Trofia    pH Condu…² Alcal…³ P.total Riqueza\n   <chr>        <chr>   <dbl> <dbl> <chr>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 Alagados     Tiba…    1909  7.2  Oligo…   7.6    41.7   172.     19.9       7\n 2 Vossoroca    Lito…    1949  5.1  Mesot…   7.3    39.8   156      21.9      14\n 3 Guaricana    Lito…    1957  7    Oligo…   7.4    27.9    83.7    12.4      12\n 4 Salto Grande Para…    1958 12    Oligo…   7.1    62.3   230.     10.3      24\n 5 Apucaraninha Tiba…    1958 NA    <NA>    NA      NA      NA      NA        10\n 6 Salto do Vau Igua…    1959  2.9  Oligo…   6.5    23.2   279      11         8\n 7 Melissa      Piri…    1962  0.1  Eutró…   6.8    34      68.4    66.9      12\n 8 Mourao       Ivai     1964 11.3  Oligo…   8.1    23.3    56.6     7.1      15\n 9 Cavernoso    Igua…    1965  2.9  Oligo…   7.4    33.1   140.      7.8      18\n10 JMF          Igua…    1970  0.45 Mesot…   7.3    40.2     3.7    41.2      18\n# … with 21 more rows, 1 more variable: CPUE <dbl>, and abbreviated variable\n#   names ¹​Fechamento, ²​Condutividade, ³​Alcalinidade\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\n\nO reservatório mais antigo é de 1909 e o mais novo de 2000. Três reservatórios estão ao final da tabela pois não há informações sobre o ano de Fechamento e suas céluas constam como NA.\n\n\n\n\n\n\nNota\n\n\n\nAo rodar esta função não alteramos o objeto res, apenas o visualizamos em uma ordem diferente. Digite novamente o nome do objeto e verá que a ordem permanece inalterada.\n\nres\n\n\n\nSe desejarmos visualizar a tabela em ordem decresente, basta fazermos:\n\nres %>% \n  arrange(desc(Fechamento))\n\nSe utilizarmos as função arrange() com uma variável nominal, a tabela será organizada em ordem alfabética para esta variável.\n\nres %>% \n  arrange(Bacia)"
  },
  {
    "objectID": "qmd/01_estrutura_dados/02-procdados.html#selecionando-colunas-da-tabela",
    "href": "qmd/01_estrutura_dados/02-procdados.html#selecionando-colunas-da-tabela",
    "title": "2  Processamento de dados",
    "section": "2.7 Selecionando colunas da tabela",
    "text": "2.7 Selecionando colunas da tabela\nÉ interessante, sobretudo para grandes bases de dados, se pudermos selecionar sub-grupos de colunas, excluindo outras que não nos interessam. Podemos fazer isto facilmente utilizando a função select().\nPor exemplo, para selecionar somente as colunas Reservatório, Area e Riqueza:\n\nres_new = res %>% \n  select(Reservatorio, Area, Riqueza)\n\nres_new %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\nReservatorioAreaRiquezaCavernoso2.9018Curucaca2.0016Foz do Areia139.0019Irai15.0012JMF0.4518Jordao3.4017Passauna14.0011Piraquara3.308Salto Caxias124.0021Salto do Vau2.908Salto Osorio51.0024Salto Santiago208.0021Segredo82.5022Mourao11.3015Patos1.3010Guaricana7.0012Parigot Souza12.0012Salto do Meio0.1011Vossoroca5.1014Canoas I30.8535Canoas II22.5040Capivara419.3034Chavantes400.0023Rosana220.0030Salto Grande12.0024Taquarucu80.1033Melissa0.1012Santa Maria0.077Alagados7.207Apucaraninha10Harmonia7\n\n\nO que fizemos nos comandos acima foi cirar um novo objeto (res_new), contendo somente as colunas selecionadas.\nSe quisermos selecionar todas as variáveis exceto Reservatório fazemos:\n\nrew_new = res %>% \n  select(-Reservatorio)\n\nrew_new %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\nBaciaFechamentoAreaTrofiapHCondutividadeAlcalinidadeP.totalRiquezaCPUEIguacu1,9652.90Oligotrófico7.433.1139.807.8189.22Iguacu1,9822.00Oligotrófico7.032.4125.704.71628.73Iguacu1,980139.00Oligotrófico7.335.597.0014.31911.59Iguacu2,00015.00Eutrófico6.950.23.3053.41230.76Iguacu1,9700.45Mesotrófico7.340.23.7041.2185.95Iguacu1,9963.40Oligotrófico7.123.7152.703.3177.75Iguacu1,97814.00Oligotrófico8.8125.6526.0015.2117.51Iguacu1,9793.30Oligotrófico7.122.850.674.584.01Iguacu1,998124.00Oligotrófico7.339.6106.0012.12120.83Iguacu1,9592.90Oligotrófico6.523.2279.0011.082.43Iguacu1,97551.00Oligotrófico8.638.9233.303.42412.55Iguacu1,979208.00Oligotrófico9.239.5117.6013.12111.73Iguacu1,99282.50Oligotrófico7.034.5165.206.42213.72Ivai1,96411.30Oligotrófico8.123.356.557.11516.50Ivai1.30Mesotrófico6.946.0180.1039.2104.71Litoranea1,9577.00Oligotrófico7.427.983.7212.4127.95Litoranea1,97012.00Oligotrófico7.763.6259.2016.91213.12Litoranea0.10Oligotrófico6.937.4147.1017.11116.10Litoranea1,9495.10Mesotrófico7.339.8156.0021.91411.74Paranapanema1,99930.85Oligotrófico7.463.3234.909.93517.95Paranapanema1,99222.50Oligotrófico7.861.29.04013.86Paranapanema1,975419.30Oligotrófico7.558.6196.005.53413.04Paranapanema1,970400.00Oligotrófico7.657.8211.807.8237.35Paranapanema1,986220.007.758.2202.403020.92Paranapanema1,95812.00Oligotrófico7.162.3230.1010.32413.67Paranapanema1,98980.10Oligotrófico7.957.0191.804.53321.82Piriqui1,9620.10Eutrófico6.834.068.3766.9126.29Piriqui0.07Oligotrófico6.841.7480.1014.979.40Tibagi1,9097.20Oligotrófico7.641.7172.2019.975.60Tibagi1,958102.05TibagiOligotrófico8.331.0113.308.6724.88\n\n\nPodemos fazer também uma seleção que vá desde uma coluna inicial até uma coluna final. Podemos selecionar, por exemplo, todas as colunas desde pH até P.total. Para isto fazemos:\n\nres_new = res %>% \n  select(pH:P.total)\n\nres_new %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\npHCondutividadeAlcalinidadeP.total7.433.1139.807.87.032.4125.704.77.335.597.0014.36.950.23.3053.47.340.23.7041.27.123.7152.703.38.8125.6526.0015.27.122.850.674.57.339.6106.0012.16.523.2279.0011.08.638.9233.303.49.239.5117.6013.17.034.5165.206.48.123.356.557.16.946.0180.1039.27.427.983.7212.47.763.6259.2016.96.937.4147.1017.17.339.8156.0021.97.463.3234.909.97.861.29.07.558.6196.005.57.657.8211.807.87.758.2202.407.162.3230.1010.37.957.0191.804.56.834.068.3766.96.841.7480.1014.97.641.7172.2019.98.331.0113.308.6\n\n\nPodemos ainda selecionar todas as variáveis categóricas:\n\nrew_new = res %>% \n  select_if(is.character)\n\nrew_new %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\nReservatorioBaciaTrofiaCavernosoIguacuOligotróficoCurucacaIguacuOligotróficoFoz do AreiaIguacuOligotróficoIraiIguacuEutróficoJMFIguacuMesotróficoJordaoIguacuOligotróficoPassaunaIguacuOligotróficoPiraquaraIguacuOligotróficoSalto CaxiasIguacuOligotróficoSalto do VauIguacuOligotróficoSalto OsorioIguacuOligotróficoSalto SantiagoIguacuOligotróficoSegredoIguacuOligotróficoMouraoIvaiOligotróficoPatosIvaiMesotróficoGuaricanaLitoraneaOligotróficoParigot SouzaLitoraneaOligotróficoSalto do MeioLitoraneaOligotróficoVossorocaLitoraneaMesotróficoCanoas IParanapanemaOligotróficoCanoas IIParanapanemaOligotróficoCapivaraParanapanemaOligotróficoChavantesParanapanemaOligotróficoRosanaParanapanemaSalto GrandeParanapanemaOligotróficoTaquarucuParanapanemaOligotróficoMelissaPiriquiEutróficoSanta MariaPiriquiOligotróficoAlagadosTibagiOligotróficoApucaraninhaTibagiHarmoniaTibagiOligotrófico\n\n\nOu todas as variáveis numéricas:\n\nrew_new = res %>% \n  select_if(is.numeric)\n\nrew_new %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\nFechamentoAreapHCondutividadeAlcalinidadeP.totalRiquezaCPUE1,9652.907.433.1139.807.8189.221,9822.007.032.4125.704.71628.731,980139.007.335.597.0014.31911.592,00015.006.950.23.3053.41230.761,9700.457.340.23.7041.2185.951,9963.407.123.7152.703.3177.751,97814.008.8125.6526.0015.2117.511,9793.307.122.850.674.584.011,998124.007.339.6106.0012.12120.831,9592.906.523.2279.0011.082.431,97551.008.638.9233.303.42412.551,979208.009.239.5117.6013.12111.731,99282.507.034.5165.206.42213.721,96411.308.123.356.557.11516.501.306.946.0180.1039.2104.711,9577.007.427.983.7212.4127.951,97012.007.763.6259.2016.91213.120.106.937.4147.1017.11116.101,9495.107.339.8156.0021.91411.741,99930.857.463.3234.909.93517.951,99222.507.861.29.04013.861,975419.307.558.6196.005.53413.041,970400.007.657.8211.807.8237.351,986220.007.758.2202.403020.921,95812.007.162.3230.1010.32413.671,98980.107.957.0191.804.53321.821,9620.106.834.068.3766.9126.290.076.841.7480.1014.979.401,9097.207.641.7172.2019.975.601,958102.058.331.0113.308.6724.88\n\n\nFinalmente, podemos alterar a ordem das colunas conforme desejarmos:\n\nnova_ordem = c('Fechamento', 'Area', \n                'Bacia', 'Reservatorio', 'CPUE', \n                'Riqueza', 'Trofia', 'Condutividade', \n                'pH', 'P.total', 'Alcalinidade')\nres_new = res %>% \n  select(nova_ordem)\n\nres_new %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\nFechamentoAreaBaciaReservatorioCPUERiquezaTrofiaCondutividadepHP.totalAlcalinidade1,9652.90IguacuCavernoso9.2218Oligotrófico33.17.47.8139.801,9822.00IguacuCurucaca28.7316Oligotrófico32.47.04.7125.701,980139.00IguacuFoz do Areia11.5919Oligotrófico35.57.314.397.002,00015.00IguacuIrai30.7612Eutrófico50.26.953.43.301,9700.45IguacuJMF5.9518Mesotrófico40.27.341.23.701,9963.40IguacuJordao7.7517Oligotrófico23.77.13.3152.701,97814.00IguacuPassauna7.5111Oligotrófico125.68.815.2526.001,9793.30IguacuPiraquara4.018Oligotrófico22.87.14.550.671,998124.00IguacuSalto Caxias20.8321Oligotrófico39.67.312.1106.001,9592.90IguacuSalto do Vau2.438Oligotrófico23.26.511.0279.001,97551.00IguacuSalto Osorio12.5524Oligotrófico38.98.63.4233.301,979208.00IguacuSalto Santiago11.7321Oligotrófico39.59.213.1117.601,99282.50IguacuSegredo13.7222Oligotrófico34.57.06.4165.201,96411.30IvaiMourao16.5015Oligotrófico23.38.17.156.551.30IvaiPatos4.7110Mesotrófico46.06.939.2180.101,9577.00LitoraneaGuaricana7.9512Oligotrófico27.97.412.483.721,97012.00LitoraneaParigot Souza13.1212Oligotrófico63.67.716.9259.200.10LitoraneaSalto do Meio16.1011Oligotrófico37.46.917.1147.101,9495.10LitoraneaVossoroca11.7414Mesotrófico39.87.321.9156.001,99930.85ParanapanemaCanoas I17.9535Oligotrófico63.37.49.9234.901,99222.50ParanapanemaCanoas II13.8640Oligotrófico61.27.89.01,975419.30ParanapanemaCapivara13.0434Oligotrófico58.67.55.5196.001,970400.00ParanapanemaChavantes7.3523Oligotrófico57.87.67.8211.801,986220.00ParanapanemaRosana20.923058.27.7202.401,95812.00ParanapanemaSalto Grande13.6724Oligotrófico62.37.110.3230.101,98980.10ParanapanemaTaquarucu21.8233Oligotrófico57.07.94.5191.801,9620.10PiriquiMelissa6.2912Eutrófico34.06.866.968.370.07PiriquiSanta Maria9.407Oligotrófico41.76.814.9480.101,9097.20TibagiAlagados5.607Oligotrófico41.77.619.9172.201,958TibagiApucaraninha2.0510TibagiHarmonia24.887Oligotrófico31.08.38.6113.30"
  },
  {
    "objectID": "qmd/01_estrutura_dados/02-procdados.html#filtrando-linhas-na-tabela",
    "href": "qmd/01_estrutura_dados/02-procdados.html#filtrando-linhas-na-tabela",
    "title": "2  Processamento de dados",
    "section": "2.8 Filtrando linhas na tabela",
    "text": "2.8 Filtrando linhas na tabela\nPodemos fazer algo similar com as linhas utilizando a função filter(). P Por exemplo, se quisermos selecionar somente os reservatórios da bacia do rio Paranapanema podemos fazer:\n\nres_paranapanema = res %>% \n  filter(Bacia == 'Paranapanema')\n\nres_paranapanema %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\nReservatorioBaciaFechamentoAreaTrofiapHCondutividadeAlcalinidadeP.totalRiquezaCPUECanoas IParanapanema1,99930.85Oligotrófico7.463.3234.99.93517.95Canoas IIParanapanema1,99222.50Oligotrófico7.861.29.04013.86CapivaraParanapanema1,975419.30Oligotrófico7.558.6196.05.53413.04ChavantesParanapanema1,970400.00Oligotrófico7.657.8211.87.8237.35RosanaParanapanema1,986220.007.758.2202.43020.92Salto GrandeParanapanema1,95812.00Oligotrófico7.162.3230.110.32413.67TaquarucuParanapanema1,98980.10Oligotrófico7.957.0191.84.53321.82\n\n\nOu todos os reservatório exceto os da bacia do rio Paranapanema.\n\nres_outros = res %>% \n  filter(Bacia != 'Paranapanema')\n\nres_outros %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\nReservatorioBaciaFechamentoAreaTrofiapHCondutividadeAlcalinidadeP.totalRiquezaCPUECavernosoIguacu1,9652.90Oligotrófico7.433.1139.807.8189.22CurucacaIguacu1,9822.00Oligotrófico7.032.4125.704.71628.73Foz do AreiaIguacu1,980139.00Oligotrófico7.335.597.0014.31911.59IraiIguacu2,00015.00Eutrófico6.950.23.3053.41230.76JMFIguacu1,9700.45Mesotrófico7.340.23.7041.2185.95JordaoIguacu1,9963.40Oligotrófico7.123.7152.703.3177.75PassaunaIguacu1,97814.00Oligotrófico8.8125.6526.0015.2117.51PiraquaraIguacu1,9793.30Oligotrófico7.122.850.674.584.01Salto CaxiasIguacu1,998124.00Oligotrófico7.339.6106.0012.12120.83Salto do VauIguacu1,9592.90Oligotrófico6.523.2279.0011.082.43Salto OsorioIguacu1,97551.00Oligotrófico8.638.9233.303.42412.55Salto SantiagoIguacu1,979208.00Oligotrófico9.239.5117.6013.12111.73SegredoIguacu1,99282.50Oligotrófico7.034.5165.206.42213.72MouraoIvai1,96411.30Oligotrófico8.123.356.557.11516.50PatosIvai1.30Mesotrófico6.946.0180.1039.2104.71GuaricanaLitoranea1,9577.00Oligotrófico7.427.983.7212.4127.95Parigot SouzaLitoranea1,97012.00Oligotrófico7.763.6259.2016.91213.12Salto do MeioLitoranea0.10Oligotrófico6.937.4147.1017.11116.10VossorocaLitoranea1,9495.10Mesotrófico7.339.8156.0021.91411.74MelissaPiriqui1,9620.10Eutrófico6.834.068.3766.9126.29Santa MariaPiriqui0.07Oligotrófico6.841.7480.1014.979.40AlagadosTibagi1,9097.20Oligotrófico7.641.7172.2019.975.60ApucaraninhaTibagi1,958102.05HarmoniaTibagiOligotrófico8.331.0113.308.6724.88\n\n\n\n\n\n\n\n\nOperadores lógicos\n\n\n\nA função filter() utiliza operadores lógicos (retornam VERDADEIRO ou FALSO). Para aprender sobre este operadores no R veja Operadores lógicos\n\n\nPodemos realizar operações análogas para variáveis numéricas. Vamos selecionar somente os reservatórios com pH menor que \\(7.0\\).\n\nres_acidos = res %>% \n  filter(pH < 7)\n\nres_acidos %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\nReservatorioBaciaFechamentoAreaTrofiapHCondutividadeAlcalinidadeP.totalRiquezaCPUEIraiIguacu2,00015.00Eutrófico6.950.23.3053.41230.76Salto do VauIguacu1,9592.90Oligotrófico6.523.2279.0011.082.43PatosIvai1.30Mesotrófico6.946.0180.1039.2104.71Salto do MeioLitoranea0.10Oligotrófico6.937.4147.1017.11116.10MelissaPiriqui1,9620.10Eutrófico6.834.068.3766.9126.29Santa MariaPiriqui0.07Oligotrófico6.841.7480.1014.979.40\n\n\nSe quisermos pH’s menores ou iguais a \\(7.0\\) fazemos:\n\nres_acidos = res %>% \n  filter(pH <= 7)\n\nres_acidos %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\nReservatorioBaciaFechamentoAreaTrofiapHCondutividadeAlcalinidadeP.totalRiquezaCPUECurucacaIguacu1,9822.00Oligotrófico7.032.4125.704.71628.73IraiIguacu2,00015.00Eutrófico6.950.23.3053.41230.76Salto do VauIguacu1,9592.90Oligotrófico6.523.2279.0011.082.43SegredoIguacu1,99282.50Oligotrófico7.034.5165.206.42213.72PatosIvai1.30Mesotrófico6.946.0180.1039.2104.71Salto do MeioLitoranea0.10Oligotrófico6.937.4147.1017.11116.10MelissaPiriqui1,9620.10Eutrófico6.834.068.3766.9126.29Santa MariaPiriqui0.07Oligotrófico6.841.7480.1014.979.40"
  },
  {
    "objectID": "qmd/01_estrutura_dados/02-procdados.html#adicionando-ou-modificando-colunas",
    "href": "qmd/01_estrutura_dados/02-procdados.html#adicionando-ou-modificando-colunas",
    "title": "2  Processamento de dados",
    "section": "2.9 Adicionando ou modificando colunas",
    "text": "2.9 Adicionando ou modificando colunas\nPodemos adicionar novas colunas, assim como fazemos em uma planilha excel. Temos por exemplo, o ano de formação do reservatório. Assumindo que estes dados são do ano de \\(2005\\), podemos criar uma coluna indicando a idade do reservatório no momento da tomada de dados. Para criar uma nova coluna usamos a função mutate().\n\nres_new = res %>% \n  mutate(Idade = 2005 - Fechamento)\n\nres %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\nReservatorioBaciaFechamentoAreaTrofiapHCondutividadeAlcalinidadeP.totalRiquezaCPUECavernosoIguacu1,9652.90Oligotrófico7.433.1139.807.8189.22CurucacaIguacu1,9822.00Oligotrófico7.032.4125.704.71628.73Foz do AreiaIguacu1,980139.00Oligotrófico7.335.597.0014.31911.59IraiIguacu2,00015.00Eutrófico6.950.23.3053.41230.76JMFIguacu1,9700.45Mesotrófico7.340.23.7041.2185.95JordaoIguacu1,9963.40Oligotrófico7.123.7152.703.3177.75PassaunaIguacu1,97814.00Oligotrófico8.8125.6526.0015.2117.51PiraquaraIguacu1,9793.30Oligotrófico7.122.850.674.584.01Salto CaxiasIguacu1,998124.00Oligotrófico7.339.6106.0012.12120.83Salto do VauIguacu1,9592.90Oligotrófico6.523.2279.0011.082.43Salto OsorioIguacu1,97551.00Oligotrófico8.638.9233.303.42412.55Salto SantiagoIguacu1,979208.00Oligotrófico9.239.5117.6013.12111.73SegredoIguacu1,99282.50Oligotrófico7.034.5165.206.42213.72MouraoIvai1,96411.30Oligotrófico8.123.356.557.11516.50PatosIvai1.30Mesotrófico6.946.0180.1039.2104.71GuaricanaLitoranea1,9577.00Oligotrófico7.427.983.7212.4127.95Parigot SouzaLitoranea1,97012.00Oligotrófico7.763.6259.2016.91213.12Salto do MeioLitoranea0.10Oligotrófico6.937.4147.1017.11116.10VossorocaLitoranea1,9495.10Mesotrófico7.339.8156.0021.91411.74Canoas IParanapanema1,99930.85Oligotrófico7.463.3234.909.93517.95Canoas IIParanapanema1,99222.50Oligotrófico7.861.29.04013.86CapivaraParanapanema1,975419.30Oligotrófico7.558.6196.005.53413.04ChavantesParanapanema1,970400.00Oligotrófico7.657.8211.807.8237.35RosanaParanapanema1,986220.007.758.2202.403020.92Salto GrandeParanapanema1,95812.00Oligotrófico7.162.3230.1010.32413.67TaquarucuParanapanema1,98980.10Oligotrófico7.957.0191.804.53321.82MelissaPiriqui1,9620.10Eutrófico6.834.068.3766.9126.29Santa MariaPiriqui0.07Oligotrófico6.841.7480.1014.979.40AlagadosTibagi1,9097.20Oligotrófico7.641.7172.2019.975.60ApucaraninhaTibagi1,958102.05HarmoniaTibagiOligotrófico8.331.0113.308.6724.88\n\n\nNote que re-escrevemos o objeto res adicionando uma nova coluna denominada Idade calculada a partir da expressão Idade = 2005 - Fechamento. A partir de agora portanto, o objeto res tem uma coluna adicional.\n\nLembre-se entretanto que esta alteração foi feita dentro do ambiente do projeto. A base de dados original .csv permanece inalterada.\n\nPodemos também fazer alterações em uma coluna existente usando a mesma função mutate. Por exemplo, a variável Area é dada em \\(km^2\\). Podemos transformá-la em Hectares multiplicando os valores por \\(100\\).\n\nres = res %>% \n  mutate(Area = Area * 100)\n\nres %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\nReservatorioBaciaFechamentoAreaTrofiapHCondutividadeAlcalinidadeP.totalRiquezaCPUECavernosoIguacu1,965290Oligotrófico7.433.1139.807.8189.22CurucacaIguacu1,982200Oligotrófico7.032.4125.704.71628.73Foz do AreiaIguacu1,98013,900Oligotrófico7.335.597.0014.31911.59IraiIguacu2,0001,500Eutrófico6.950.23.3053.41230.76JMFIguacu1,97045Mesotrófico7.340.23.7041.2185.95JordaoIguacu1,996340Oligotrófico7.123.7152.703.3177.75PassaunaIguacu1,9781,400Oligotrófico8.8125.6526.0015.2117.51PiraquaraIguacu1,979330Oligotrófico7.122.850.674.584.01Salto CaxiasIguacu1,99812,400Oligotrófico7.339.6106.0012.12120.83Salto do VauIguacu1,959290Oligotrófico6.523.2279.0011.082.43Salto OsorioIguacu1,9755,100Oligotrófico8.638.9233.303.42412.55Salto SantiagoIguacu1,97920,800Oligotrófico9.239.5117.6013.12111.73SegredoIguacu1,9928,250Oligotrófico7.034.5165.206.42213.72MouraoIvai1,9641,130Oligotrófico8.123.356.557.11516.50PatosIvai130Mesotrófico6.946.0180.1039.2104.71GuaricanaLitoranea1,957700Oligotrófico7.427.983.7212.4127.95Parigot SouzaLitoranea1,9701,200Oligotrófico7.763.6259.2016.91213.12Salto do MeioLitoranea10Oligotrófico6.937.4147.1017.11116.10VossorocaLitoranea1,949510Mesotrófico7.339.8156.0021.91411.74Canoas IParanapanema1,9993,085Oligotrófico7.463.3234.909.93517.95Canoas IIParanapanema1,9922,250Oligotrófico7.861.29.04013.86CapivaraParanapanema1,97541,930Oligotrófico7.558.6196.005.53413.04ChavantesParanapanema1,97040,000Oligotrófico7.657.8211.807.8237.35RosanaParanapanema1,98622,0007.758.2202.403020.92Salto GrandeParanapanema1,9581,200Oligotrófico7.162.3230.1010.32413.67TaquarucuParanapanema1,9898,010Oligotrófico7.957.0191.804.53321.82MelissaPiriqui1,96210Eutrófico6.834.068.3766.9126.29Santa MariaPiriqui7Oligotrófico6.841.7480.1014.979.40AlagadosTibagi1,909720Oligotrófico7.641.7172.2019.975.60ApucaraninhaTibagi1,958102.05HarmoniaTibagiOligotrófico8.331.0113.308.6724.88"
  },
  {
    "objectID": "qmd/01_estrutura_dados/02-procdados.html#renomeando-colunas",
    "href": "qmd/01_estrutura_dados/02-procdados.html#renomeando-colunas",
    "title": "2  Processamento de dados",
    "section": "2.10 Renomeando colunas",
    "text": "2.10 Renomeando colunas\nFinalmente, podemos renomear colunas para facilitar a leitura dos dados. A coluna P.total, por exemplo, indica a quantidade de fósforo total, enquanto a variável CPUE é a captura em kg. Podemos renomear estas colunas usando a função rename:\n\nres = res %>% \n  rename(Fosforo_total = P.total,\n         Captura_kg = CPUE)\n\nres %>% \n  flextable() %>%\n  fit_to_width(max_width = 8)\n\n\n\nReservatorioBaciaFechamentoAreaTrofiapHCondutividadeAlcalinidadeFosforo_totalRiquezaCaptura_kgCavernosoIguacu1,965290Oligotrófico7.433.1139.807.8189.22CurucacaIguacu1,982200Oligotrófico7.032.4125.704.71628.73Foz do AreiaIguacu1,98013,900Oligotrófico7.335.597.0014.31911.59IraiIguacu2,0001,500Eutrófico6.950.23.3053.41230.76JMFIguacu1,97045Mesotrófico7.340.23.7041.2185.95JordaoIguacu1,996340Oligotrófico7.123.7152.703.3177.75PassaunaIguacu1,9781,400Oligotrófico8.8125.6526.0015.2117.51PiraquaraIguacu1,979330Oligotrófico7.122.850.674.584.01Salto CaxiasIguacu1,99812,400Oligotrófico7.339.6106.0012.12120.83Salto do VauIguacu1,959290Oligotrófico6.523.2279.0011.082.43Salto OsorioIguacu1,9755,100Oligotrófico8.638.9233.303.42412.55Salto SantiagoIguacu1,97920,800Oligotrófico9.239.5117.6013.12111.73SegredoIguacu1,9928,250Oligotrófico7.034.5165.206.42213.72MouraoIvai1,9641,130Oligotrófico8.123.356.557.11516.50PatosIvai130Mesotrófico6.946.0180.1039.2104.71GuaricanaLitoranea1,957700Oligotrófico7.427.983.7212.4127.95Parigot SouzaLitoranea1,9701,200Oligotrófico7.763.6259.2016.91213.12Salto do MeioLitoranea10Oligotrófico6.937.4147.1017.11116.10VossorocaLitoranea1,949510Mesotrófico7.339.8156.0021.91411.74Canoas IParanapanema1,9993,085Oligotrófico7.463.3234.909.93517.95Canoas IIParanapanema1,9922,250Oligotrófico7.861.29.04013.86CapivaraParanapanema1,97541,930Oligotrófico7.558.6196.005.53413.04ChavantesParanapanema1,97040,000Oligotrófico7.657.8211.807.8237.35RosanaParanapanema1,98622,0007.758.2202.403020.92Salto GrandeParanapanema1,9581,200Oligotrófico7.162.3230.1010.32413.67TaquarucuParanapanema1,9898,010Oligotrófico7.957.0191.804.53321.82MelissaPiriqui1,96210Eutrófico6.834.068.3766.9126.29Santa MariaPiriqui7Oligotrófico6.841.7480.1014.979.40AlagadosTibagi1,909720Oligotrófico7.641.7172.2019.975.60ApucaraninhaTibagi1,958102.05HarmoniaTibagiOligotrófico8.331.0113.308.6724.88"
  },
  {
    "objectID": "qmd/01_estrutura_dados/02-procdados.html#outras-operações-para-processamento-e-transformação-de-dados",
    "href": "qmd/01_estrutura_dados/02-procdados.html#outras-operações-para-processamento-e-transformação-de-dados",
    "title": "2  Processamento de dados",
    "section": "2.11 Outras operações para processamento e transformação de dados",
    "text": "2.11 Outras operações para processamento e transformação de dados\nExistem muitas outras operações possíveis para processar conjuntos de dados. O conjunto de pacotes tidyverse (veja aqui) possui um grande número de funções para esta finalidade que operam de modo coerente.\nNeste capítulo vimos funções para:\n\nImportar arquivos .csv: read_delim;\nVerificar os tipos de dados de uma tabela: glimpse;\nReorganizar informações: arrange;\nSelecionar colunas: select;\nFiltrar linhas: filter;\nAdicionar/modificar colunas: mutate;\nRenomear colunas: rename.\n\nA partir dos próximos capítulos iremos nos dedicar a aspectos da estatística descritiva, apresentando novas funções à medida que forem necessárias. Caso deseje explorar outras funções para processamento e transformação de dados acesse o capítulo Manipulação e formatação de dados."
  }
]